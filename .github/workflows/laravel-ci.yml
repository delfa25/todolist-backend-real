name: Laravel CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: todolist_db
          MYSQL_USER: todolist_user
          MYSQL_PASSWORD: todolist_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, zip
        coverage: xdebug

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: todolist_db
        DB_USERNAME: todolist_user
        DB_PASSWORD: todolist_password
      run: php artisan test

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, zip

    - name: Install Dependencies
      run: composer install --no-dev --optimize-autoloader

    - name: Build Docker Image
      run: docker build -t todolist-backend .

    - name: Deploy to Koyeb
      run: |
        echo "Deployment to Koyeb would happen here"
        echo "To deploy to Koyeb, connect your GitHub repository to Koyeb directly."
        echo "- Repository: delfa25/todolist-backend-real"
        echo "- Build Type: Dockerfile"
        echo "- Dockerfile Path: todolist-backend-real/Dockerfile (or adjust if your project structure differs)"
        echo "- Environment Variables: Set DB_* variables for production, APP_KEY"
        echo "- After initial deployment, run 'php artisan migrate --force' via Koyeb console or a post-deploy hook."

